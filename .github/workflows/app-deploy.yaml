name: Deploy app

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      deploy_target:
        description: "Deploy to:"
        required: true
        default: "fad"
        type: choice
        options:
          - "fad"
          - "store"
          - "ios_fad"
          - "ios_store"
          - "android_fad"
          - "android_store"

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.get_build_number.outputs.build_number }}
      flutter_version: ${{ steps.set_output.outputs.flutter_version }}
    env:
      SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      FLUTTER_VERSION: '3.24.0'
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set output for flutter_version
        id: set_output
        run: |
          echo "flutter_version=${FLUTTER_VERSION}" >> $GITHUB_OUTPUT

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: Install Dart dependencies
        run: dart pub get

      - uses: bluefireteam/melos-action@v3

      # Secrets
      - name: Decrypt secrets
        run: melos decrypt-secrets

      - name: Get build number
        id: get_build_number
        run: |
          BUILD_NUMBER=$(bash scripts/get-build-number.sh)
          if [ -z "$BUILD_NUMBER" ]; then
            echo "Error: Build number is not specified."
            exit 1
          fi
          echo "#️⃣ New build number: $BUILD_NUMBER"
          echo "build_number=$BUILD_NUMBER" >> $GITHUB_OUTPUT

  # iOS deploy
  ios-deploy:
    needs: setup
    runs-on: macos-latest

    if: ${{ inputs.deploy_target == 'fad' || inputs.deploy_target == 'store' || inputs.deploy_target == 'ios_fad' || inputs.deploy_target == 'ios_store' }}

    env:
      SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set target variable based on deploy_target
        run: |
          echo "deploy_target is = ${{ inputs.deploy_target }}"
          if [[ "${{ inputs.deploy_target }}" == "fad" || "${{ inputs.deploy_target }}" = "ios_fad" ]]; then
            echo "ios_target=ios_fad" >> $GITHUB_ENV
          elif [[ "${{ inputs.deploy_target }}" == "store" || "${{ inputs.deploy_target }}" ==  "ios_store" ]]; then
            echo "ios_target=ios_store" >> $GITHUB_ENV
          fi

      - name: Display ios_target value
        run: echo "ios_target is set to = ${{ env.ios_target }}"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.setup.outputs.flutter_version }}
          channel: 'stable'
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: Display Flutter version
        run: flutter --version

      - uses: bluefireteam/melos-action@v3

      # Secrets
      - name: Decrypt secrets
        run: melos decrypt-secrets

      # iOS certs
      - name: Making sure the iOS certificates and profiles are installed
        run: melos build:ios_match_assure

      # Dart/Flutter
      - name: Generate dart code
        run: melos codegen --no-select

      # Read Sentry DSN
      - name: Read Sentry DSN
        id: read_sentry_dsn
        run: |
          if [ -f ./secrets/sentry-dsn.txt ]; then
            SENTRY_DSN=$(cat ./secrets/sentry-dsn.txt)
            echo "SENTRY_DSN=$SENTRY_DSN" >> $GITHUB_ENV
          fi

      - name: Display Build Number
        run:
          echo "Number is = ${{ needs.setup.outputs.build_number }}"

      - name: Build and deploy
        run: |
          bash scripts/build.sh ${{ env.ios_target }} ${{ needs.setup.outputs.build_number }}
        env:
          SENTRY_DSN: ${{ env.SENTRY_DSN }}

  # Android deploy
  android-deploy:
    needs: setup
    runs-on: macos-latest

    if: ${{ inputs.deploy_target == 'fad' || inputs.deploy_target == 'store' || inputs.deploy_target == 'android_fad' || inputs.deploy_target == 'android_store' }}

    env:
      SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Set target variable based on deploy_target
        run: |
          echo "deploy_target is = ${{ inputs.deploy_target }}"
          if [[ "${{ inputs.deploy_target }}" == "fad" || "${{ inputs.deploy_target }}" = "android_fad" ]]; then
            echo "android_target=android_fad" >> $GITHUB_ENV
          elif [[ "${{ inputs.deploy_target }}" == "store" || "${{ inputs.deploy_target }}" ==  "android_store" ]]; then
            echo "android_target=android_store" >> $GITHUB_ENV
          fi

      - name: Display android_target value
        run: echo "android_target is set to = ${{ env.android_target }}"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ needs.setup.outputs.flutter_version }}
          channel: 'stable'
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}

      - name: Display Flutter version
        run: flutter --version

      - uses: bluefireteam/melos-action@v3

      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: "17.x"

      # Secrets
      - name: Decrypt secrets
        run: melos decrypt-secrets

      # Dart/Flutter
      - name: Generate dart code
        run: melos codegen --no-select

      # Read Sentry DSN
      - name: Read Sentry DSN
        id: read_sentry_dsn
        run: |
          if [ -f ./secrets/sentry-dsn.txt ]; then
            SENTRY_DSN=$(cat ./secrets/sentry-dsn.txt)
            echo "SENTRY_DSN=$SENTRY_DSN" >> $GITHUB_ENV
          fi

      - name: Build and deploy
        run: |
          bash scripts/build.sh ${{ env.android_target }} ${{ needs.setup.outputs.build_number }}
        env:
          SENTRY_DSN: ${{ env.SENTRY_DSN }}