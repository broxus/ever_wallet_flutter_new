name: Deploy main app

on:
  push:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      deploy_target:
        description: "Deploy to:"
        required: true
        default: "fad"
        type: choice
        options:
          - "fad"
          - "store"
          - "fad_store"
          - "ios_store"
          - "android_store"

jobs:
  build_and_deploy:
    runs-on: macos-latest
    env:
      SECRET_PASSPHRASE: ${{ secrets.SECRET_PASSPHRASE }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    steps:
      # Setup
      - uses: actions/checkout@v4
        with:
          fetch-depth: 50
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
          cache: true
          cache-key: flutter-:os:-:channel:-:version:-:arch:-:hash:-${{ hashFiles('**/pubspec.lock') }}
      - uses: bluefireteam/melos-action@v3
      - uses: actions/setup-java@v4
        if: inputs.deploy_target != 'store_ios'
        with:
          distribution: zulu
          java-version: "17.x"

      # Secrets
      - name: Decrypt secrets
        run: melos decrypt-secrets

      # iOS certs
      - name: Making sure the iOS certificates and profiles are installed
        if: inputs.deploy_target != 'store_android'
        run: melos build:ios_match_assure
        env:
          DEPLOY_TARGET: ${{ inputs.deploy_target }}

      # Dart/Flutter
      - name: Generate dart code
        run: melos codegen --no-select

      # Read Sentry DSN
      - name: Read Sentry DSN
        id: read_sentry_dsn
        run: |
          if [ -f ./secrets/sentry-dsn.txt ]; then
            SENTRY_DSN=$(cat ./secrets/sentry-dsn.txt)
            echo "SENTRY_DSN=$SENTRY_DSN" >> $GITHUB_ENV
          fi

      # Build and deploy to FAD
      - name: Build and deploy to FAD
        if: inputs.deploy_target == 'fad'
        run: melos build:deploy_fad
        env:
          SENTRY_DSN: ${{ env.SENTRY_DSN }}

      # Build and deploy to STORE
      - name: Build and deploy to STORE
        if: inputs.deploy_target == 'store'
        run: melos build:deploy_store
        env:
          SENTRY_DSN: ${{ env.SENTRY_DSN }}

      # Build and deploy to FAD and STORE
      - name: Build and deploy to FAD and STORE
        if: inputs.deploy_target == 'fad_store'
        run: melos build:deploy_fad_store
        env:
          SENTRY_DSN: ${{ env.SENTRY_DSN }}

      # Build and deploy to Test Flight
      - name: Build and deploy to Test Flight
        if: inputs.deploy_target == 'ios_store'
        run: melos build:deploy_ios_store
        env:
          SENTRY_DSN: ${{ env.SENTRY_DSN }}

      # Build and deploy to Google Play
      - name: Build and deploy to Google Play
        if: inputs.deploy_target == 'android_store'
        run: melos build:deploy_android_store
        env:
          SENTRY_DSN: ${{ env.SENTRY_DSN }}